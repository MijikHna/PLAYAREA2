version: "3.8"
services:
  nginx:
    build:
      context: ./nginx
    image: playarea/nginx
    hostname: nginx
    container_name: nginx
    restart: on-failure
    ports:
      - "443:443"
      - "80:80"
    #volumes:
    healthcheck:
      test: curl -f http://localhost:80
    restart: on-failure
    networks: 
      playarea-nw:
        ipv4_address: 192.16.10.10

  angular:
    build: 
      context: ./angular/docker
    image: playarea/angular
    hostname: angular
    container_name: angular
    restart: on-failure
    ports:
      - "4200:4200"
    healthcheck:
      test: "curl -f http://localhost:4200 -k"
    volumes:
      - ./angular/src:/app
    depends_on: 
      - django
    networks: 
      playarea-nw:
        ipv4_address: 192.16.10.20

  django:
    build: 
      context:  ./django/docker/
    image: playarea/django
    hostname: django
    container_name: django
    restart: on-failure
    ports:
      - "8000:8000"
      - "8001:8001"
    #environment: 
    healthcheck:
      test: curl -f http://localhost:8000 -k
    networks: 
      playarea-nw:
        ipv4_address: 192.16.10.30
    volumes:
      - ./django/src:/app
    depends_on:
      - postgres
      - mongo

  mongo:
    build:
      context: ./mongo
    image: playarea/mongo
    hostname: mongo
    container_name: mongo
    restart: on-failure
    ports:
      - "27017:27017"
    healthcheck:
      test: echo "db.runCommand("ping").ok | mongo localhost:27017/test --quite"
    volumes:
      - playarea-mongo-data:/data/db
    networks: 
      playarea-nw:
        ipv4_address: 192.16.10.40
  
  postgres:
    build: 
      context: ./postgres
    image: playarea/postgres
    hostname: postgres
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    volumes:
      - playarea-postgres-data:/var/lib/postgresql/data
    networks:
      playarea-nw:
        ipv4_address: 192.16.10.50

networks:
  playarea-nw:
    name: playarea-nw
    ipam:
      driver: default
      config:
        - subnet: "192.16.10.0/24"

volumes:
  playarea-mongo-data: {}
  playarea-postgres-data: {}

  
  